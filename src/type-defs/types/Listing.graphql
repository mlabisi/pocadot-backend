interface Listing {
  id: ID!
  owner: User!
  condition: CardCondition!
  idol: Idol!
  release: String!
  description: String!
  countryOfOrigin: String!
  internationalShipping: Boolean!
}

type SellListing implements Listing {
  # Common fields
  id: ID!
  owner: User!
  condition: CardCondition!
  idol: Idol!
  release: String!
  description: String!
  countryOfOrigin: String!
  internationalShipping: Boolean!

  # Minimum price for listing
  minPrice: Float!
}

type TradeListing implements Listing {
  # Common fields
  id: ID!
  owner: User!
  condition: CardCondition!
  idol: Idol!
  release: String!
  description: String!
  countryOfOrigin: String!
  internationalShipping: Boolean!

  # Description of the desired photocard
  tradeTargets: [TradeTarget]!

  # Optional minimum price for listing
  minPrice: Float
}

type Query {
  listings(filter: ListingFilters, size: Int, pageNo: Int): [Listing!]!
  faveListings: [Listing!]!
  userListings: [Listing!]!
}

type Mutation {
  createListing(data: AddListingInput!): Listing!
  updateListing(data: UpdateListingInput!, where: UniqueListingInput!): Listing!
  removeListing(where: UniqueListingInput!): Listing!
}
